React Native Basic UI Tutorials
Here's a comprehensive guide to building basic UIs in React Native with practical examples:

1. Setting Up a New React Native Project
First, set up your development environment:

bash
npx react-native init BasicUIApp
cd BasicUIApp
2. Core UI Components
Text Component
javascript
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const TextExample = () => {
  return (
    <View style={styles.container}>
      <Text style={styles.boldText}>Bold Text</Text>
      <Text style={styles.coloredText}>Colored Text</Text>
      <Text style={styles.largeText}>Large Text</Text>
      <Text numberOfLines={1} ellipsizeMode="tail">
        This is a very long text that will be truncated at the end with ellipsis...
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  boldText: {
    fontWeight: 'bold',
  },
  coloredText: {
    color: 'blue',
  },
  largeText: {
    fontSize: 24,
  },
});

export default TextExample;
Button Component
javascript
import React from 'react';
import { View, Button, StyleSheet, Alert } from 'react-native';

const ButtonExample = () => {
  return (
    <View style={styles.container}>
      <Button
        title="Press Me"
        onPress={() => Alert.alert('Button Pressed!')}
      />
      <Button
        title="Disabled Button"
        disabled={true}
        onPress={() => Alert.alert("This won't show")}
      />
      <Button
        title="Colored Button"
        color="#841584"
        onPress={() => Alert.alert('Purple Button Pressed!')}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    padding: 20,
  },
});

export default ButtonExample;
TextInput Component
javascript
import React, { useState } from 'react';
import { View, TextInput, Text, StyleSheet } from 'react-native';

const TextInputExample = () => {
  const [text, setText] = useState('');

  return (
    <View style={styles.container}>
      <Text>You typed: {text}</Text>
      <TextInput
        style={styles.input}
        placeholder="Type here..."
        onChangeText={newText => setText(newText)}
        defaultValue={text}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry={true}
      />
      <TextInput
        style={[styles.input, styles.multiline]}
        placeholder="Multiline input"
        multiline={true}
        numberOfLines={4}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    padding: 20,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginVertical: 10,
    padding: 10,
  },
  multiline: {
    height: 100,
    textAlignVertical: 'top',
  },
});

export default TextInputExample;
3. Layout Components
Flexbox Layout
javascript
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const FlexboxExample = () => {
  return (
    <View style={styles.container}>
      <View style={[styles.box, styles.box1]}>
        <Text>Box 1</Text>
      </View>
      <View style={[styles.box, styles.box2]}>
        <Text>Box 2</Text>
      </View>
      <View style={[styles.box, styles.box3]}>
        <Text>Box 3</Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row', // Try 'column' for vertical layout
    justifyContent: 'space-around', // Try 'flex-start', 'center', 'flex-end', 'space-between'
    alignItems: 'center', // Try 'flex-start', 'flex-end', 'stretch'
    padding: 20,
  },
  box: {
    width: 80,
    height: 80,
    justifyContent: 'center',
    alignItems: 'center',
  },
  box1: {
    backgroundColor: 'red',
  },
  box2: {
    backgroundColor: 'green',
  },
  box3: {
    backgroundColor: 'blue',
  },
});

export default FlexboxExample;
ScrollView
javascript
import React from 'react';
import { ScrollView, View, Text, StyleSheet } from 'react-native';

const ScrollViewExample = () => {
  return (
    <ScrollView style={styles.container}>
      {Array.from({ length: 20 }).map((_, i) => (
        <View key={i} style={styles.item}>
          <Text>Item {i + 1}</Text>
        </View>
      ))}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  item: {
    height: 100,
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
});

export default ScrollViewExample;
4. List Components
FlatList (for performance)
javascript
import React from 'react';
import { FlatList, View, Text, StyleSheet } from 'react-native';

const data = Array.from({ length: 1000 }, (_, i) => ({
  id: i.toString(),
  title: `Item ${i + 1}`,
}));

const FlatListExample = () => {
  return (
    <FlatList
      data={data}
      renderItem={({ item }) => (
        <View style={styles.item}>
          <Text>{item.title}</Text>
        </View>
      )}
      keyExtractor={item => item.id}
    />
  );
};

const styles = StyleSheet.create({
  item: {
    height: 60,
    justifyContent: 'center',
    paddingLeft: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
});

export default FlatListExample;
5. Styling Components
StyleSheet Example
javascript
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';

const StyleSheetExample = () => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Welcome to React Native</Text>
      <View style={styles.box}>
        <Text style={styles.boxText}>Styled Box</Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 20,
  },
  box: {
    width: 200,
    height: 200,
    backgroundColor: 'lightblue',
    borderRadius: 10,
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.3,
    shadowRadius: 4,
    elevation: 5, // for Android
  },
  boxText: {
    fontSize: 18,
    color: 'white',
  },
});

export default StyleSheetExample;
6. Complete Login Screen Example
javascript
import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Image,
  KeyboardAvoidingView,
  Platform,
} from 'react-native';

const LoginScreen = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = () => {
    console.log('Login with:', email, password);
    // Add your authentication logic here
  };

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      style={styles.container}
    >
      <View style={styles.innerContainer}>
        <Image
          source={require('./assets/logo.png')} // Replace with your logo
          style={styles.logo}
        />
        <Text style={styles.title}>Welcome Back</Text>
        
        <TextInput
          style={styles.input}
          placeholder="Email"
          value={email}
          onChangeText={setEmail}
          keyboardType="email-address"
          autoCapitalize="none"
        />
        
        <TextInput
          style={styles.input}
          placeholder="Password"
          value={password}
          onChangeText={setPassword}
          secureTextEntry
        />
        
        <TouchableOpacity style={styles.button} onPress={handleLogin}>
          <Text style={styles.buttonText}>Login</Text>
        </TouchableOpacity>
        
        <TouchableOpacity>
          <Text style={styles.linkText}>Forgot Password?</Text>
        </TouchableOpacity>
        
        <View style={styles.footer}>
          <Text>Don't have an account? </Text>
          <TouchableOpacity>
            <Text style={styles.linkText}>Sign Up</Text>
          </TouchableOpacity>
        </View>
      </View>
    </KeyboardAvoidingView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  innerContainer: {
    flex: 1,
    justifyContent: 'center',
    padding: 20,
  },
  logo: {
    width: 100,
    height: 100,
    alignSelf: 'center',
    marginBottom: 30,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 30,
    textAlign: 'center',
  },
  input: {
    height: 50,
    borderColor: '#ddd',
    borderWidth: 1,
    borderRadius: 8,
    paddingHorizontal: 15,
    marginBottom: 15,
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
    marginBottom: 20,
  },
  buttonText: {
    color: 'white',
    fontWeight: 'bold',
    fontSize: 16,
  },
  linkText: {
    color: '#007AFF',
    textAlign: 'center',
    marginBottom: 10,
  },
  footer: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginTop: 20,
  },
});

export default LoginScreen;
Key Concepts to Learn Next:
Navigation: React Navigation (Stack, Tab, Drawer)

State Management: Context API, Redux, or MobX

API Calls: Fetch or Axios for network requests

Animations: Animated API or react-native-reanimated

Forms: Formik with Yup validation

Hooks: useState, useEffect, useContext, etc.